<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crcc.common.mapper.EngineeringChangeMonthlyMapper" >
  <resultMap id="BaseResultMap" type="com.crcc.common.model.EngineeringChangeMonthly" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="report_time" property="reportTime" jdbcType="TIMESTAMP" />
    <result column="quarter" property="quarter" jdbcType="TINYINT" />
    <result column="construction_output_value" property="constructionOutputValue" jdbcType="DECIMAL" />
    <result column="change_claim_amount" property="changeClaimAmount" jdbcType="DECIMAL" />
    <result column="percentage" property="percentage" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.crcc.common.model.EngineeringChangeMonthly" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, report_time, quarter, construction_output_value, change_claim_amount, 
    percentage, create_time, create_user, update_time, update_user
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from engineering_change_monthly
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from engineering_change_monthly
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.crcc.common.model.EngineeringChangeMonthly" useGeneratedKeys="true" keyProperty="id">
    insert into engineering_change_monthly (id, project_id, report_time, 
      quarter, construction_output_value, change_claim_amount, 
      percentage, create_time, create_user, 
      update_time, update_user, remark
      )
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{reportTime,jdbcType=TIMESTAMP}, 
      #{quarter,jdbcType=TINYINT}, #{constructionOutputValue,jdbcType=DECIMAL}, #{changeClaimAmount,jdbcType=DECIMAL}, 
      #{percentage,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crcc.common.model.EngineeringChangeMonthly" useGeneratedKeys="true" keyProperty="id">
    insert into engineering_change_monthly
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="reportTime != null" >
        report_time,
      </if>
      <if test="quarter != null" >
        quarter,
      </if>
      <if test="constructionOutputValue != null" >
        construction_output_value,
      </if>
      <if test="changeClaimAmount != null" >
        change_claim_amount,
      </if>
      <if test="percentage != null" >
        percentage,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="reportTime != null" >
        #{reportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="quarter != null" >
        #{quarter,jdbcType=TINYINT},
      </if>
      <if test="constructionOutputValue != null" >
        #{constructionOutputValue,jdbcType=DECIMAL},
      </if>
      <if test="changeClaimAmount != null" >
        #{changeClaimAmount,jdbcType=DECIMAL},
      </if>
      <if test="percentage != null" >
        #{percentage,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crcc.common.model.EngineeringChangeMonthly" >
    update engineering_change_monthly
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="reportTime != null" >
        report_time = #{reportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="quarter != null" >
        quarter = #{quarter,jdbcType=TINYINT},
      </if>
      <if test="constructionOutputValue != null" >
        construction_output_value = #{constructionOutputValue,jdbcType=DECIMAL},
      </if>
      <if test="changeClaimAmount != null" >
        change_claim_amount = #{changeClaimAmount,jdbcType=DECIMAL},
      </if>
      <if test="percentage != null" >
        percentage = #{percentage,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.crcc.common.model.EngineeringChangeMonthly" >
    update engineering_change_monthly
    set project_id = #{projectId,jdbcType=BIGINT},
      report_time = #{reportTime,jdbcType=TIMESTAMP},
      quarter = #{quarter,jdbcType=TINYINT},
      construction_output_value = #{constructionOutputValue,jdbcType=DECIMAL},
      change_claim_amount = #{changeClaimAmount,jdbcType=DECIMAL},
      percentage = #{percentage,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crcc.common.model.EngineeringChangeMonthly" >
    update engineering_change_monthly
    set project_id = #{projectId,jdbcType=BIGINT},
      report_time = #{reportTime,jdbcType=TIMESTAMP},
      quarter = #{quarter,jdbcType=TINYINT},
      construction_output_value = #{constructionOutputValue,jdbcType=DECIMAL},
      change_claim_amount = #{changeClaimAmount,jdbcType=DECIMAL},
      percentage = #{percentage,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getDetails" resultType="com.crcc.common.model.EngineeringChangeMonthly">
    SELECT
    e.*,
    info.temporarily_price AS temporarilyPrice,
    p.name AS projectName,
    info.project_type AS projectType
    FROM
    engineering_change_monthly e
    LEFT JOIN
    project p ON e.project_id
    LEFT JOIN
    project_info info ON e.project_id = info.project_id
    WHERE e.id = #{id}
  </select>

  <select id="listForPage" resultType="com.crcc.common.model.EngineeringChangeMonthly">
    SELECT
      e.*,
      info.temporarily_price AS temporarilyPrice,
      p.name AS projectName,
      info.project_type AS projectType
    FROM
      engineering_change_monthly e
        LEFT JOIN
      project p ON e.project_id = p.id
        LEFT JOIN
      project_info info ON e.project_id = info.project_id
    WHERE 1=1
    <if test="projectName != null">
      AND p.name LIKE concat('%',#{projectName},'%')
    </if>
    <if test="projectId != null">
      AND e.project_id = #{projectId}
    </if>
    <if test="year != null">
      AND YEAR(e.report_time) = #{year}
    </if>
    <if test="quarter != null">
      AND quarter = #{quarter}
    </if>
    ORDER BY e.id DESC
    <if test="offset != null and length != null">
      limit #{offset},#{length}
    </if>
  </select>

  <select id="listForPageSize" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM
      engineering_change_monthly e
    LEFT JOIN
      project p ON e.project_id = p.id
    LEFT JOIN
      project_info info ON e.project_id = info.project_id
    WHERE 1=1
    <if test="projectName != null">
      AND p.name LIKE concat('%',#{projectName},'%')
    </if>
    <if test="projectId != null">
      AND e.project_id = #{projectId}
    </if>
    <if test="year != null">
      AND YEAR(e.report_time) = #{year}
    </if>
    <if test="quarter != null">
      AND quarter = #{quarter}
    </if>
  </select>

  <select id="listStatisticsForPage" resultType="com.crcc.common.model.EngineeringChangeMonthly">
    SELECT
      e.project_id,
      SUM(e.change_claim_amount) AS changeClaimAmountStatistics,
      SUM(e.construction_output_value) AS constructionOutputValueStatistics,
      info.temporarily_price AS temporarilyPrice,
      p.name AS projectName,
      info.project_type AS projectType
    FROM
      engineering_change_monthly e
    LEFT JOIN
      project p ON e.project_id = p.id
    LEFT JOIN
      project_info info ON e.project_id = info.project_id
    WHERE
      1 = 1
    <if test="projectName != null">
      AND p.name LIKE concat('%',#{projectName},'%')
    </if>
    <if test="projectId != null">
      AND e.project_id = #{projectId}
    </if>
    GROUP BY e.project_id
    ORDER BY e.id DESC
    <if test="offset != null and length != null">
      limit #{offset},#{length}
    </if>
  </select>

  <select id="listStatisticsForPageSize" resultType="java.lang.Integer">
    SELECT count(*) FROM
    (SELECT
     e.id
    FROM
    engineering_change_monthly e
    LEFT JOIN
    project p ON e.project_id = p.id
    LEFT JOIN
    project_info info ON e.project_id = info.project_id
    WHERE
    1 = 1
    <if test="projectName != null">
      AND p.name LIKE concat('%',#{projectName},'%')
    </if>
    <if test="projectId != null">
      AND e.project_id = #{projectId}
    </if>
    GROUP BY e.project_id) AS a
  </select>
</mapper>