<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crcc.common.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.crcc.common.model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="disable" property="disable" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="is_super_admin" property="isSuperAdmin" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, description, disable, create_time, create_user_id, update_time, update_user_id,is_super_admin
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.crcc.common.model.Role" >
    insert into role (id, name, description, 
      disable, create_time, create_user_id, is_super_admin
      update_time, update_user_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{disable,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT},#{isSuperAdmin})
  </insert>
  <insert id="insertSelective" parameterType="com.crcc.common.model.Role" keyProperty="id" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="disable != null" >
        disable,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="isSuperAdmin != null">
        is_super_admin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="disable != null" >
        #{disable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="isSuperAdmin != null">
        #{isSuperAdmin},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crcc.common.model.Role" >
    update role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="disable != null" >
        disable = #{disable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="isSuperAdmin != null">
        is_super_admin = #{isSuperAdmin},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crcc.common.model.Role" >
    update role
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      disable = #{disable,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      is_super_admin = #{isSuperAdmin}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listRoleForPage" resultType="com.crcc.common.model.Role">
    SELECT
    *
    FROM
      role
    <if test="name != null">
      WHERE `name` LIKE CONCAT('%', #{name}, '%')
    </if>
    ORDER BY create_time DESC
    <if test="offset != null and length != null">
      LIMIT #{offset} , #{length}
    </if>
  </select>

  <select id="listRoleForPageSize" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM
    role
    <if test="name != null">
      WHERE `name` LIKE CONCAT('%', #{name}, '%')
    </if>
  </select>

  <select id="findRoleByUserId" resultType="com.crcc.common.model.Role">
    SELECT *FROM user_role_rel rel LEFT JOIN role r ON rel.role_id = r.id WHERE rel.user_id = #{userId}
  </select>
</mapper>