<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crcc.common.mapper.MeteringAccountMapper" >
  <resultMap id="BaseResultMap" type="com.crcc.common.model.MeteringAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="metering_num" property="meteringNum" jdbcType="INTEGER" />
    <result column="metering_time" property="meteringTime" jdbcType="TIMESTAMP" />
    <result column="valuation_amount_tax" property="valuationAmountTax" jdbcType="DECIMAL" />
    <result column="valuation_amount_not_tax" property="valuationAmountNotTax" jdbcType="DECIMAL" />
    <result column="tax" property="tax" jdbcType="DECIMAL" />
    <result column="real_amount_tax" property="realAmountTax" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="already_paid_amount" property="alreadyPaidAmount" jdbcType="DECIMAL" />
    <result column="unpaid_amount" property="unpaidAmount" jdbcType="DECIMAL" />
    <result column="pay_proportion" property="payProportion" jdbcType="DECIMAL" />
    <result column="extra_amount" property="extraAmount" jdbcType="DECIMAL" />
    <result column="not_calculated_amount" property="notCalculatedAmount" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="annex_url" property="annexUrl" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
    <result column="production_value" property="productionValue" jdbcType="DECIMAL" />
    <result column="prepayment_amount" property="prepaymentAmount" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, metering_num, metering_time, valuation_amount_tax, valuation_amount_not_tax, 
    tax, real_amount_tax, real_amount, already_paid_amount, unpaid_amount, pay_proportion,
    extra_amount, not_calculated_amount, remark, annex_url, project_id, create_time, create_user, update_time,
    update_user,production_value,prepayment_amount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from metering_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from metering_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.crcc.common.model.MeteringAccount" >
    insert into metering_account (id, metering_num, metering_time, 
      valuation_amount_tax, valuation_amount_not_tax, 
      tax, real_amount_tax, real_amount, 
      already_paid_amount, unpaid_amount,pay_proportion,
      extra_amount, not_calculated_amount, remark, 
      annex_url, project_id,create_time,create_user,update_time,update_user,production_value,prepayment_amount)
    values (#{id,jdbcType=BIGINT}, #{meteringNum,jdbcType=INTEGER}, #{meteringTime,jdbcType=TIMESTAMP}, 
      #{valuationAmountTax,jdbcType=DECIMAL}, #{valuationAmountNotTax,jdbcType=VARCHAR}, 
      #{tax,jdbcType=DECIMAL}, #{realAmountTax,jdbcType=DECIMAL}, #{realAmount,jdbcType=DECIMAL}, 
      #{alreadyPaidAmount,jdbcType=DECIMAL}, #{unpaidAmount,jdbcType=DECIMAL}, #{payProportion,jdbcType=DECIMAL},
      #{extraAmount,jdbcType=DECIMAL}, #{notCalculatedAmount,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{annexUrl,jdbcType=VARCHAR}, #{projectId,jdbcType=BIGINT},#{createTime},#{createUser},#{updateTime},
      #{updateUser},#{productionValue},#{prepaymentAmount})
  </insert>
  <insert id="insertSelective" parameterType="com.crcc.common.model.MeteringAccount" keyProperty="id" useGeneratedKeys="true">
    insert into metering_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="meteringNum != null" >
        metering_num,
      </if>
      <if test="meteringTime != null" >
        metering_time,
      </if>
      <if test="valuationAmountTax != null" >
        valuation_amount_tax,
      </if>
      <if test="valuationAmountNotTax != null" >
        valuation_amount_not_tax,
      </if>
      <if test="tax != null" >
        tax,
      </if>
      <if test="realAmountTax != null" >
        real_amount_tax,
      </if>
      <if test="realAmount != null" >
        real_amount,
      </if>
      <if test="alreadyPaidAmount != null" >
        already_paid_amount,
      </if>
      <if test="unpaidAmount != null" >
        unpaid_amount,
      </if>
      <if test="payProportion != null" >
        pay_proportion,
      </if>
      <if test="extraAmount != null" >
        extra_amount,
      </if>
      <if test="notCalculatedAmount != null" >
        not_calculated_amount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="annexUrl != null" >
        annex_url,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="productionValue != null">
        production_value,
      </if>
      <if test="prepaymentAmount != null">
        prepayment_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="meteringNum != null" >
        #{meteringNum,jdbcType=INTEGER},
      </if>
      <if test="meteringTime != null" >
        #{meteringTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valuationAmountTax != null" >
        #{valuationAmountTax,jdbcType=DECIMAL},
      </if>
      <if test="valuationAmountNotTax != null" >
        #{valuationAmountNotTax,jdbcType=VARCHAR},
      </if>
      <if test="tax != null" >
        #{tax,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTax != null" >
        #{realAmountTax,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="alreadyPaidAmount != null" >
        #{alreadyPaidAmount,jdbcType=DECIMAL},
      </if>
      <if test="unpaidAmount != null" >
        #{unpaidAmount,jdbcType=DECIMAL},
      </if>
      <if test="payProportion != null" >
        #{payProportion,jdbcType=DECIMAL},
      </if>
      <if test="extraAmount != null" >
        #{extraAmount,jdbcType=DECIMAL},
      </if>
      <if test="notCalculatedAmount != null" >
        #{notCalculatedAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="annexUrl != null" >
        #{annexUrl,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="createUser != null">
        #{createUser},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="updateUser != null">
        #{updateUser},
      </if>
      <if test="productionValue != null">
        #{productionValue},
      </if>
      <if test="prepaymentAmount != null">
        #{prepaymentAmount}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crcc.common.model.MeteringAccount" >
    update metering_account
    <set >
      <if test="meteringNum != null" >
        metering_num = #{meteringNum,jdbcType=INTEGER},
      </if>
      <if test="meteringTime != null" >
        metering_time = #{meteringTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valuationAmountTax != null" >
        valuation_amount_tax = #{valuationAmountTax,jdbcType=DECIMAL},
      </if>
      <if test="valuationAmountNotTax != null" >
        valuation_amount_not_tax = #{valuationAmountNotTax,jdbcType=VARCHAR},
      </if>
      <if test="tax != null" >
        tax = #{tax,jdbcType=DECIMAL},
      </if>
      <if test="realAmountTax != null" >
        real_amount_tax = #{realAmountTax,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        real_amount = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="alreadyPaidAmount != null" >
        already_paid_amount = #{alreadyPaidAmount,jdbcType=DECIMAL},
      </if>
      <if test="unpaidAmount != null" >
        unpaid_amount = #{unpaidAmount,jdbcType=DECIMAL},
      </if>
      <if test="payProportion != null" >
        pay_proportion = #{payProportion,jdbcType=DECIMAL},
      </if>
      <if test="extraAmount != null" >
        extra_amount = #{extraAmount,jdbcType=DECIMAL},
      </if>
      <if test="notCalculatedAmount != null" >
        not_calculated_amount = #{notCalculatedAmount,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="annexUrl != null" >
        annex_url = #{annexUrl,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="createUser != null">
        create_user = #{createUser},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser},
      </if>
      <if test="productionValue != null">
        production_value = #{productionValue},
      </if>
      <if test="prepaymentAmount != null">
        prepayment_amount = #{prepaymentAmount},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crcc.common.model.MeteringAccount" >
    update metering_account
    set metering_num = #{meteringNum,jdbcType=INTEGER},
      metering_time = #{meteringTime,jdbcType=TIMESTAMP},
      valuation_amount_tax = #{valuationAmountTax,jdbcType=DECIMAL},
      valuation_amount_not_tax = #{valuationAmountNotTax,jdbcType=VARCHAR},
      tax = #{tax,jdbcType=DECIMAL},
      real_amount_tax = #{realAmountTax,jdbcType=DECIMAL},
      real_amount = #{realAmount,jdbcType=DECIMAL},
      already_paid_amount = #{alreadyPaidAmount,jdbcType=DECIMAL},
      unpaid_amount = #{unpaidAmount,jdbcType=DECIMAL},
      pay_proportion = #{payProportion,jdbcType=DECIMAL},
      extra_amount = #{extraAmount,jdbcType=DECIMAL},
      not_calculated_amount = #{notCalculatedAmount,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      annex_url = #{annexUrl,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=BIGINT},
      create_time = #{createTime},
      create_user = #{createUser},
      update_time = #{updateTime},
      update_user = #{updateUser},
      production_value = #{productionValue},
      prepayment_amount = #{prepaymentAmount}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getDetailsById" resultType="com.crcc.common.model.MeteringAccount">
    SELECT
      mc.*,p.name AS projectName,cu.name AS createUserStr,uu.name AS updateUserStr
    FROM
      metering_account mc
    LEFT JOIN
      project p ON mc.project_id = p.id
    LEFT JOIN
      `user` cu ON mc.create_user = cu.id
    LEFT JOIN
      `user` uu ON mc.update_user = uu.id
    WHERE mc.id = #{mcId}
  </select>

  <select id="listMeteringAccountForPage" resultType="com.crcc.common.model.MeteringAccount">
    SELECT
      mc.*,p.name AS projectName,cu.name AS createUserStr,uu.name AS updateUserStr
    FROM
      metering_account mc
    LEFT JOIN project p ON mc.project_id = p.id
    LEFT JOIN `user` cu ON mc.create_user = cu.id
    LEFT JOIN `user` uu ON mc.update_user = uu.id
    WHERE 1=1
    <if test="projectId != null">
      AND p.id = #{projectId}
    </if>
    <if test="projectName != null">
      AND p.name = #{projectName}
    </if>
    <if test="meteringTime != null">
      AND mc.metering_time = #{meteringTime}
    </if>
    <if test="minPayProportion != null and maxPayProportion != null">
      AND mc.pay_proportion &gt;= #{minPayProportion} AND  mc.pay_proportion &lt;= #{maxPayProportion}
    </if>
    <if test="minProductionValue != null and maxProductionValue != null">
      AND mc.production_value &gt;= #{minProductionValue} AND mc.production_value &lt;= #{maxProductionValue}
    </if>
    ORDER BY id DESC
    <if test="offset != null and length != null">
      limit #{offset},#{length}
    </if>
  </select>

  <select id="listMeteringAccountForPageSize" resultType="java.lang.Integer">
    SELECT
     COUNT(*)
    FROM
    metering_account mc
    LEFT JOIN project p ON mc.project_id = p.id
    WHERE 1=1
    <if test="projectId != null">
      AND p.id = #{projectId}
    </if>
    <if test="projectName != null">
      AND p.name = #{projectName}
    </if>
    <if test="meteringTime != null">
      AND mc.metering_time = #{meteringTime}
    </if>
    <if test="minPayProportion != null and maxPayProportion != null">
      AND mc.pay_proportion &gt;= #{minPayProportion} AND  mc.pay_proportion &lt;= #{maxPayProportion}
    </if>
    <if test="minProductionValue != null and maxProductionValue != null">
      AND mc.production_value &gt;= #{minProductionValue} AND mc.production_value &lt;= #{maxProductionValue}
    </if>
  </select>
</mapper>