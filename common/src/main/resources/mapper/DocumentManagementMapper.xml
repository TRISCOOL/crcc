<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crcc.common.mapper.DocumentManagementMapper" >
  <resultMap id="BaseResultMap" type="com.crcc.common.model.DocumentManagement" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="annex_url" property="annexUrl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="BIGINT" />
    <result column="file_type" property="fileType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, annex_url, remark, `type`, create_time,create_user,update_time,update_user,file_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from document_management
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from document_management
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.crcc.common.model.DocumentManagement" >
    insert into document_management (id, name, annex_url, 
      remark, `type`, create_time,create_user,update_time,update_user,file_type
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{annexUrl,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
      #{createTime},#{createUser},#{updateTime},#{updateUser},#{fileType}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crcc.common.model.DocumentManagement" keyProperty="id" useGeneratedKeys="true">
    insert into document_management
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="annexUrl != null" >
        annex_url,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="annexUrl != null" >
        #{annexUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="updateUser != null">
        #{updateUser},
      </if>
      <if test="fileType != null">
        #{fileType},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crcc.common.model.DocumentManagement" >
    update document_management
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="annexUrl != null" >
        annex_url = #{annexUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser},
      </if>
      <if test="fileType != null">
        file_type = #{fileType},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crcc.common.model.DocumentManagement" >
    update document_management
    set name = #{name,jdbcType=VARCHAR},
      annex_url = #{annexUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listForFile" resultType="com.crcc.common.model.DocumentManagement">
    SELECT
      *
    FROM
      document_management
    WHERE `type` = 1
    <if test="fileName != null">
      AND `name` LIKE concat('%',#{fileName},'%')
    </if>
    <if test="fileType != null">
      AND file_type = #{fileType}
    </if>
    AND file_type IS NOT NULL
    ORDER BY id DESC
    <if test="offset != null and length != null">
      limit #{offset},#{length}
    </if>
  </select>

  <select id="listForFileSize" resultType="java.lang.Integer">
    SELECT
     count(*)
    FROM
    document_management
    WHERE `type` = 1
    <if test="fileName != null">
      AND `name` LIKE concat('%',#{fileName},'%')
    </if>
    <if test="fileType != null">
      AND file_type = #{fileType}
    </if>
    AND file_type IS NOT NULL
  </select>

  <select id="listForReferences" resultType="com.crcc.common.model.DocumentManagement">
    SELECT
      *
    FROM
      document_management
    WHERE `type` = 0
    <if test="fileName != null">
      AND `name` LIKE concat('%',#{fileName},'%')
    </if>
    AND file_type IS NULL
    ORDER BY id DESC
    <if test="offset != null and length != null">
      limit #{offset},#{length}
    </if>
  </select>

  <select id="listForReferencesSize" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM
    document_management
    WHERE `type` = 0
    <if test="fileName != null">
      AND `name` LIKE concat('%',#{fileName},'%')
    </if>
    AND file_type IS NULL
  </select>
</mapper>